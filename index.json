[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "spatial-navigation-cursor/index.js",
    "content": "// @flow\n\n/*::\ntype cursorManager$Rect = {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n};\n\nexport type spatialNavigationCursor$EventListener = {\n  type: string;\n  listener: spatialNavigationCursor$EventHandler;\n};\n\nexport class spatialNavigationCursor$FocusUpdatedEvent extends CustomEvent {\n  detail: {\n    target: HTMLElement;\n  };\n}\n\nexport type spatialNavigationCursor$EventHandler = (event: spatialNavigationCursor$FocusUpdatedEvent) => mixed;\n\nexport type spatialNavigationCursor$Events = {\n  FOCUS_UPDATED: 'focusUpdated';\n};\n\ntype Dimension = {\n  width: number;\n  height: number;\n};\n*/\n\nexport default class CursorManager {\n  /*::\n  static Events: spatialNavigationCursor$Events;\n  root_: HTMLElement;\n  cursor_: HTMLElement;\n  focused_: ?HTMLElement;\n  freezed_: boolean;\n  focusClassName_: string;\n  viewHeight_: number;\n  observer_: ?MutationObserver;\n  eventListeners_: spatialNavigationCursor$EventListener[];\n  */\n\n  /**\n   * @param {Object} props\n   * @param {HTMLElement} props.root an HTML element to use as its root\n   * @param {string} props.focusClassName a css class name to identify the focused element\n   */\n  constructor({ root, focusClassName }/*: {\n    root: HTMLElement,\n    focusClassName: string,\n  }*/) {\n    /**\n     * @type {HTMLElement}\n     * @access private\n     */\n    this.root_ = root;\n\n    /**\n     * @type {string}\n     * @access private\n     */\n    this.focusClassName_ = focusClassName;\n\n    /**\n     * @type {HTMLElement}\n     * @access private\n     */\n    this.cursor_ = document.createElement('div');\n\n    /**\n     * @type {HTMLElement}\n     * @access private\n     */\n    this.focused_ = null;\n\n    /**\n     * @type {boolean}\n     * @access private\n     */\n    this.freezed_ = false;\n\n    /**\n     * @type {string}\n     * @access private\n     */\n    this.viewHeight_ = window.innerHeight;\n\n    /**\n     * @type {MutationObserver}\n     * @access private\n     */\n    this.observer_ = null;\n\n    /**\n     * @type {Object[]}\n     * @access private\n     */\n    this.eventListeners_ = [];\n  }\n\n  /**\n   * Start the manager\n   */\n  start()/*: void*/ {\n    this.styleCursor_();\n    this.appendToRoot_();\n    this.observeFocus_();\n    this.focus();\n  }\n\n  /**\n   * Resume the manager\n   */\n  resume()/*: void*/ {\n    this.freezed_ = false;\n    this.focus();\n  }\n\n  /**\n   * Stop the manager\n   */\n  stop()/*: void*/ {\n    this.removeFromRoot_();\n    this.disconnectFocus_();\n  }\n\n  /**\n   * Freeze the cursor\n   */\n  freeze() {\n    this.freezed_ = true;\n  }\n\n  /**\n   * Focus on the element with the cursor\n   */\n  focus()/*: void*/ {\n    if (!this.focused_ || this.cursor_.style.display === 'none') {\n      this.place();\n    } else {\n      this.move();\n    }\n  }\n\n  /**\n   * Place the cursor\n   */\n  place()/*: void*/ {\n    const focused = isInDocumentBody(this.focused_) ? this.focused_ : document.querySelector(`.${ this.focusClassName_ }`);\n    if (!focused) {\n      this.hideCursor_();\n      return;\n    }\n\n    const origTransitionDuration = this.cursor_.style.transitionDuration;\n    this.cursor_.style.transitionDuration = '0';\n    const r = getAbsoluteElementRect(focused);\n    if (focused.dataset.sncTracked !== 'false') this.scrollIntoView_(r);\n    this.resizeCursorTo_(r);\n    this.moveCursorTo_(r);\n    if (!focused.classList.contains(this.focusClassName_)) {\n      this.hideCursor_();\n    } else {\n      this.updateCursorModifier_();\n      this.showCursor_();\n    }\n    this.cursor_.style.transitionDuration = origTransitionDuration;\n  }\n\n  /**\n   * Move the cursor\n   */\n  move()/*: void*/ {\n    const focused = isInDocumentBody(this.focused_) ? this.focused_ : document.querySelector(`.${ this.focusClassName_ }`);\n    if (!focused || !focused.classList.contains(this.focusClassName_)) {\n      this.hideCursor_();\n      return;\n    } else {\n      this.showCursor_();\n    }\n\n    const r = getAbsoluteElementRect(focused);\n    if (focused.dataset.sncTracked !== 'false') this.scrollIntoView_(r);\n    this.resizeCursorTo_(r);\n    this.moveCursorTo_(r);\n    this.updateCursorModifier_();\n  }\n\n  /**\n   * Resize the cursor to the dimension of the focused element\n   */\n  resize() {\n    const focused = this.focused_;\n    if (!focused) return;\n    const { width, height } = getElementDimension(focused);\n    this.resizeCursorTo_({ width, height, top: 0, left: 0 });\n  }\n\n  /**\n   * Get the cursor element\n   * @return {HTMLElement} the cursor element\n   */\n  getCursor()/*: HTMLElement*/ {\n    return this.cursor_;\n  }\n\n  /**\n   * Add an event listener\n   * @return {HTMLElement} the focused element\n   */\n  getFocusedElement()/*: ?HTMLElement*/ {\n    return this.focused_;\n  }\n\n  /**\n   * Add an event listener\n   * @param {string} type an event type\n   * @param {Function} listener an evnet handler \n   */\n  addEventListener(type/*: string*/, listener/*: spatialNavigationCursor$EventHandler*/) {\n    this.eventListeners_.push({ type, listener });\n  }\n\n  /**\n   * Remove an event listener\n   * @param {string} type an event type\n   * @param {Function} listener an evnet handler \n   */\n  removeEventListener(type/*: string*/, listener/*: spatialNavigationCursor$EventHandler*/) {\n    const idx = this.eventListeners_.findIndex(l => l.type === type && l.listener === listener);\n    if (~idx) {\n      this.eventListeners_.splice(idx, 1);\n    }\n  }\n\n  /**\n   * Scroll into view of destination rect\n   * @access private\n   * @param {cursorManager$Rect} rect the destination rect\n   * @param {number} rect.top\n   * @param {number} rect.left\n   * @param {number} rect.width\n   * @param {number} rect.height\n   */\n  scrollIntoView_(rect/*: cursorManager$Rect*/)/*: void*/ {\n    const left = window.pageXOffset;\n    window.scroll({\n      left,\n      top: rect.top - (window.innerHeight * 0.5) + (rect.height * 0.5),\n      behavior: 'smooth',\n    });\n  }\n\n  /**\n   * Move the cursor to the destination rect\n   * @access private\n   * @param {cursorManager$Rect} rect the destination rect to scroll to\n   * @param {number} rect.top\n   * @param {number} rect.left\n   * @param {number} rect.width\n   * @param {number} rect.height\n   */\n  moveCursorTo_(rect/*: cursorManager$Rect*/)/*: void*/ {\n    const style = getComputedStyle(this.cursor_, '');\n    const borserTop = parseInt(style.borderTopWidth, 10);\n    const borserLeft = parseInt(style.borderLeftWidth, 10);\n    this.cursor_.style.transform = `translate3d(${ rect.left - borserLeft }px, ${ rect.top - borserTop }px, 0)`;\n  }\n\n  /**\n   * Move the cursor to the destination rect\n   * @access private\n   * @param {cursorManager$Rect} rect the destination rect to scroll to\n   * @param {number} rect.top\n   * @param {number} rect.left\n   * @param {number} rect.width\n   * @param {number} rect.height\n   */\n  resizeCursorTo_(rect/*: cursorManager$Rect*/)/*: void*/ {\n    this.cursor_.style.width = `${ rect.width }px`;\n    this.cursor_.style.height = `${ rect.height }px`;\n  }\n\n  /**\n   * Style the cursor\n   * @access private\n   */\n  styleCursor_()/*: void*/ {\n    this.cursor_.classList.add('__spatial-navigation-cursor__');\n    this.cursor_.style.position = 'absolute';\n    this.cursor_.style.top = '0';\n    this.cursor_.style.left = '0';\n    this.hideCursor_();\n  }\n\n  /**\n   * Update the cursor's modifier\n   * @access private\n   */\n  updateCursorModifier_() {\n    if (!this.focused_) return;\n    const old = this.cursor_.dataset.sncModifier || '';\n    const now = this.focused_.dataset.sncModifier || '';\n    if (now === old) return;\n    this.cursor_.dataset.sncModifier = now;\n  }\n\n  /**\n   * Hide the cursor\n   * @access private\n   */\n  hideCursor_()/*: void*/ {\n    this.cursor_.style.display = 'none';\n  }\n\n  /**\n   * Show the cursor\n   * @access private\n   */\n  showCursor_()/*: void*/ {\n    this.cursor_.style.display = '';\n  }\n\n  /**\n   * Append the cursor to the root\n   * @access private\n   */\n  appendToRoot_()/*: void*/ {\n    this.root_.appendChild(this.cursor_);\n  }\n\n  /**\n   * Append the cursor to the root\n   * @access private\n   */\n  removeFromRoot_()/*: void*/ {\n    this.root_.removeChild(this.cursor_);\n  }\n\n  /**\n   * Observe the change of focused elements\n   * @access private\n   */\n  observeFocus_() {\n    const observer = this.observer_ = new MutationObserver((mutationRecords) => {\n      var target;\n      for (let mutation of mutationRecords) {\n        if ( (mutation.target/*: any*/).classList.contains(this.focusClassName_) ) {\n          target = mutation.target;\n          break;\n        }\n      }\n      if (target) {\n        this.focused_ = ((target/*: any*/)/*: HTMLElement*/);\n        if (!this.freezed_) this.focus();\n        this.trigger_(CursorManager.Events.FOCUS_UPDATED, new CustomEvent(CursorManager.Events.FOCUS_UPDATED, {\n          detail: { target },\n        }));\n      } else {\n        this.hideCursor_();\n      }\n    });\n    observer.observe(this.root_, {\n      attributeFilter: [ \"class\" ],\n      attributes: true,\n      subtree: true,\n    });\n  }\n\n  /**\n   * Stop Observering the change of focused elements\n   * @access private\n   */\n  disconnectFocus_()/*: void*/ {\n    if (!this.observer_) return;\n    this.observer_.disconnect();\n  }\n\n  /**\n   * Trigger an event\n   * @access private\n   * @param {string} type an event type\n   * @param {...*} args an event type\n   */\n  trigger_(type/*: string*/, ...args/*: any[]*/)/*: void*/ {\n    this.eventListeners_\n      .filter(l => l.type === type)\n      .forEach(l => l.listener(...args));\n  }\n}\n\nCursorManager.Events = {\n  FOCUS_UPDATED: 'focusUpdated',\n};\n\n/**\n * Get an element rect with its absolute location\n * @param {HTMLElement} elem an HTML element\n * @return {cursorManager$Rect} the element rect with its absolute location\n */\nfunction getAbsoluteElementRect(elem/*: HTMLElement*/)/* cursorManager$Rect*/ {\n  const r = elem.getBoundingClientRect();\n  return { left: r.left + window.pageXOffset, top: r.top + window.pageYOffset, width: r.width, height: r.height };\n}\n\n/**\n * Check if an element is in the document body\n * @param {HTMLElement} element an HTML element\n * @return {boolean} whether the element is the document body\n */\nfunction isInDocumentBody(element/*: ?HTMLElement*/)/*: boolean*/ {\n  if (!element) return false;\n  if (element === document.body) return true;\n  if (!element.offsetParent) return false;\n  return isInDocumentBody((element.offsetParent/*: any*/));\n}\n\n/**\n * Get an element's dimension\n * @param {HTMLElement} element an HTML element\n * @return {Object} the dimension\n */\nfunction getElementDimension(element/*: HTMLElement*/)/*: Dimension*/ {\n  const style = getComputedStyle(element);\n  const w = parseInt(style.width, 10);\n  const h = parseInt(style.height, 10);\n  const l = parseInt(style.paddingLeft, 10);\n  const r = parseInt(style.paddingRight, 10);\n  const t = parseInt(style.paddingTop, 10);\n  const b = parseInt(style.paddingBottom, 10);\n  const width = w + l + r;\n  const height = h + t + b;\n  return { width, height };\n}\n",
    "static": true,
    "longname": "/Users/a12915/workspace/spatial-navigation-cursor/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "class",
    "name": "CursorManager",
    "memberof": "spatial-navigation-cursor/index.js",
    "static": true,
    "longname": "spatial-navigation-cursor/index.js~CursorManager",
    "access": "public",
    "export": true,
    "importPath": "spatial-navigation-cursor",
    "importStyle": "CursorManager",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "props.root",
        "description": "an HTML element to use as its root"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "props.focusClassName",
        "description": "a css class name to identify the focused element"
      }
    ]
  },
  {
    "__docId__": 3,
    "kind": "member",
    "name": "root_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#root_",
    "access": "private",
    "description": "",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4,
    "kind": "member",
    "name": "focusClassName_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#focusClassName_",
    "access": "private",
    "description": "",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 5,
    "kind": "member",
    "name": "cursor_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#cursor_",
    "access": "private",
    "description": "",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 6,
    "kind": "member",
    "name": "focused_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#focused_",
    "access": "private",
    "description": "",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 7,
    "kind": "member",
    "name": "freezed_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#freezed_",
    "access": "private",
    "description": "",
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 8,
    "kind": "member",
    "name": "viewHeight_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#viewHeight_",
    "access": "private",
    "description": "",
    "lineNumber": 90,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 9,
    "kind": "member",
    "name": "observer_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#observer_",
    "access": "private",
    "description": "",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "MutationObserver"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 10,
    "kind": "member",
    "name": "eventListeners_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#eventListeners_",
    "access": "private",
    "description": "",
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "Object[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 11,
    "kind": "method",
    "name": "start",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#start",
    "access": "public",
    "description": "Start the manager",
    "lineNumber": 108,
    "params": [],
    "return": null
  },
  {
    "__docId__": 12,
    "kind": "method",
    "name": "resume",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#resume",
    "access": "public",
    "description": "Resume the manager",
    "lineNumber": 118,
    "params": [],
    "return": null
  },
  {
    "__docId__": 14,
    "kind": "method",
    "name": "stop",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#stop",
    "access": "public",
    "description": "Stop the manager",
    "lineNumber": 126,
    "params": [],
    "return": null
  },
  {
    "__docId__": 15,
    "kind": "method",
    "name": "freeze",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#freeze",
    "access": "public",
    "description": "Freeze the cursor",
    "lineNumber": 134,
    "params": [],
    "return": null
  },
  {
    "__docId__": 17,
    "kind": "method",
    "name": "focus",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#focus",
    "access": "public",
    "description": "Focus on the element with the cursor",
    "lineNumber": 141,
    "params": [],
    "return": null
  },
  {
    "__docId__": 18,
    "kind": "method",
    "name": "place",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#place",
    "access": "public",
    "description": "Place the cursor",
    "lineNumber": 152,
    "params": [],
    "return": null
  },
  {
    "__docId__": 19,
    "kind": "method",
    "name": "move",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#move",
    "access": "public",
    "description": "Move the cursor",
    "lineNumber": 177,
    "params": [],
    "return": null
  },
  {
    "__docId__": 20,
    "kind": "method",
    "name": "resize",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#resize",
    "access": "public",
    "description": "Resize the cursor to the dimension of the focused element",
    "lineNumber": 196,
    "params": [],
    "return": null
  },
  {
    "__docId__": 21,
    "kind": "method",
    "name": "getCursor",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#getCursor",
    "access": "public",
    "description": "Get the cursor element",
    "lineNumber": 207,
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": "the cursor element"
    },
    "params": []
  },
  {
    "__docId__": 22,
    "kind": "method",
    "name": "getFocusedElement",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#getFocusedElement",
    "access": "public",
    "description": "Add an event listener",
    "lineNumber": 215,
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": "the focused element"
    },
    "params": []
  },
  {
    "__docId__": 23,
    "kind": "method",
    "name": "addEventListener",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#addEventListener",
    "access": "public",
    "description": "Add an event listener",
    "lineNumber": 224,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "an event type"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "an evnet handler"
      }
    ],
    "return": null
  },
  {
    "__docId__": 24,
    "kind": "method",
    "name": "removeEventListener",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#removeEventListener",
    "access": "public",
    "description": "Remove an event listener",
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "an event type"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": "an evnet handler"
      }
    ],
    "return": null
  },
  {
    "__docId__": 25,
    "kind": "method",
    "name": "scrollIntoView_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#scrollIntoView_",
    "access": "private",
    "description": "Scroll into view of destination rect",
    "lineNumber": 249,
    "params": [
      {
        "nullable": null,
        "types": [
          "cursorManager$Rect"
        ],
        "spread": false,
        "optional": false,
        "name": "rect",
        "description": "the destination rect"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rect.top",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rect.left",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rect.width",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rect.height",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 26,
    "kind": "method",
    "name": "moveCursorTo_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#moveCursorTo_",
    "access": "private",
    "description": "Move the cursor to the destination rect",
    "lineNumber": 267,
    "params": [
      {
        "nullable": null,
        "types": [
          "cursorManager$Rect"
        ],
        "spread": false,
        "optional": false,
        "name": "rect",
        "description": "the destination rect to scroll to"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rect.top",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rect.left",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rect.width",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rect.height",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 27,
    "kind": "method",
    "name": "resizeCursorTo_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#resizeCursorTo_",
    "access": "private",
    "description": "Move the cursor to the destination rect",
    "lineNumber": 283,
    "params": [
      {
        "nullable": null,
        "types": [
          "cursorManager$Rect"
        ],
        "spread": false,
        "optional": false,
        "name": "rect",
        "description": "the destination rect to scroll to"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rect.top",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rect.left",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rect.width",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rect.height",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 28,
    "kind": "method",
    "name": "styleCursor_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#styleCursor_",
    "access": "private",
    "description": "Style the cursor",
    "lineNumber": 292,
    "params": [],
    "return": null
  },
  {
    "__docId__": 29,
    "kind": "method",
    "name": "updateCursorModifier_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#updateCursorModifier_",
    "access": "private",
    "description": "Update the cursor's modifier",
    "lineNumber": 304,
    "params": [],
    "return": null
  },
  {
    "__docId__": 30,
    "kind": "method",
    "name": "hideCursor_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#hideCursor_",
    "access": "private",
    "description": "Hide the cursor",
    "lineNumber": 316,
    "params": [],
    "return": null
  },
  {
    "__docId__": 31,
    "kind": "method",
    "name": "showCursor_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#showCursor_",
    "access": "private",
    "description": "Show the cursor",
    "lineNumber": 324,
    "params": [],
    "return": null
  },
  {
    "__docId__": 32,
    "kind": "method",
    "name": "appendToRoot_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#appendToRoot_",
    "access": "private",
    "description": "Append the cursor to the root",
    "lineNumber": 332,
    "params": [],
    "return": null
  },
  {
    "__docId__": 33,
    "kind": "method",
    "name": "removeFromRoot_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#removeFromRoot_",
    "access": "private",
    "description": "Append the cursor to the root",
    "lineNumber": 340,
    "params": [],
    "return": null
  },
  {
    "__docId__": 34,
    "kind": "method",
    "name": "observeFocus_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#observeFocus_",
    "access": "private",
    "description": "Observe the change of focused elements",
    "lineNumber": 348,
    "params": [],
    "return": null
  },
  {
    "__docId__": 36,
    "kind": "method",
    "name": "disconnectFocus_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#disconnectFocus_",
    "access": "private",
    "description": "Stop Observering the change of focused elements",
    "lineNumber": 378,
    "params": [],
    "return": null
  },
  {
    "__docId__": 37,
    "kind": "method",
    "name": "trigger_",
    "memberof": "spatial-navigation-cursor/index.js~CursorManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "spatial-navigation-cursor/index.js~CursorManager#trigger_",
    "access": "private",
    "description": "Trigger an event",
    "lineNumber": 389,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "an event type"
      },
      {
        "nullable": null,
        "types": [
          "...*"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": "an event type"
      }
    ],
    "return": null
  },
  {
    "__docId__": 38,
    "kind": "function",
    "name": "getAbsoluteElementRect",
    "memberof": "spatial-navigation-cursor/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "spatial-navigation-cursor/index.js~getAbsoluteElementRect",
    "access": "public",
    "export": false,
    "importPath": "spatial-navigation-cursor",
    "importStyle": null,
    "description": "Get an element rect with its absolute location",
    "lineNumber": 405,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "an HTML element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "cursorManager$Rect"
      ],
      "spread": false,
      "description": "the element rect with its absolute location"
    },
    "ignore": true
  },
  {
    "__docId__": 39,
    "kind": "function",
    "name": "isInDocumentBody",
    "memberof": "spatial-navigation-cursor/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "spatial-navigation-cursor/index.js~isInDocumentBody",
    "access": "public",
    "export": false,
    "importPath": "spatial-navigation-cursor",
    "importStyle": null,
    "description": "Check if an element is in the document body",
    "lineNumber": 415,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "an HTML element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "whether the element is the document body"
    },
    "ignore": true
  },
  {
    "__docId__": 40,
    "kind": "function",
    "name": "getElementDimension",
    "memberof": "spatial-navigation-cursor/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "spatial-navigation-cursor/index.js~getElementDimension",
    "access": "public",
    "export": false,
    "importPath": "spatial-navigation-cursor",
    "importStyle": null,
    "description": "Get an element's dimension",
    "lineNumber": 427,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "an HTML element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the dimension"
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# spatial-navigation-cursor\n\nA simple spatial navigation cursor library\n\n![spatial-navigation-cursor screenshot](./assets/screenshot.gif)\n\nYou can see how it works [here](https://ygoto3.github.io/spatial-navigation-cursor/demo/).\n\n## Install\n\n```sh\n$ npm i spatial-navigation-cursor\n```\n\n## Usage\n\nGive an element \"focused\" class name.  (You can use any other class name if you want.)\n\n```html\n<main>\n  <div class=\"block focused\"></div>\n  <div class=\"block\"></div>\n  <div class=\"block\"></div>\n  <div class=\"block\"></div>\n  <div class=\"block\"></div>\n</main>\n```\n\n`.__spatial-navigation-cursor__` is a class selector for the cursor.  Write css code for the selector.\n\n```css\n:root {\n  --transition-duration: .2s;\n  --transition-easing: ease-out;\n}\n\n.__spatial-navigation-cursor__ {\n  outline: 5px solid black;\n  transition: width var(--transition-duration) var(--transition-easing), height var(--transition-duration) var(--transition-easing), transform var(--transition-duration) var(--transition-easing);\n}\n```\n\nInstantiate a new cursor manager and start it.  When you give an element the focus class name, the cursor manager automatically moves the cursor to the element.\n\n```js\nimport CursorManager from 'spatial-navigation-cursor';\n\nconst cursorManager = new CursorManager({\n  root: document.body,\n  focusClassName: 'focused',\n});\n\ncursorManager.start();\n\nwindow.addEventListener('keydown', (e) => {\n  e.preventDefault();\n  switch (e.key) {\n    case 'ArrowUp':\n    case 'ArrowDown': {\n      const focused = document.querySelector('.focused');\n      if (e.key === 'ArrowUp') {\n        const prev = focused.previousElementSibling;\n        if (!prev) return;\n        prev.classList.add('focused');\n        focused.classList.remove('focused');\n      } else {\n        const next = focused.nextElementSibling;\n        if (!next) return;\n        next.classList.add('focused');\n        focused.classList.remove('focused');\n      }\n      break;\n    }\n  }\n});\n```\n\n## Advanced Usage\n\n### Cursor Style Modifier\n\nYou can modify the cursor's style by add a custom data attribute to a focusable element.\n\n```html\n<main>\n  <div class=\"block focused\" data-snc-modifer=\"green\"></div>\n  <div class=\"block\" data-snc-modifer=\"green\"></div>\n</main>\n```\n\nThe custom data attribute is copied to the cursor element, so you can extend the style like below.\n\n```css\n[data-snc-modifer=\"green\"].__spatial-navigation-cursor__ {\n  outline-color: green;\n}\n```\n\n### Untracking\n\nBy default, when the cursor moves to a focused element, the cursor manager automatically scroll the window to track the element.  Sometimes you do not want the manager to scroll the window for a specific element.  For example, you do not want window scrolling for a position-fixed element.\n\nYou can disable tracking motion by setting `\"false\"` to an element's `data-snc-tracked` attribute.\n\n```html\n<main style=\"position: fixed\">\n  <div class=\"block focused\" data-snc-tracked=\"false\"></div>\n  <div class=\"block\" data-snc-tracked=\"false\"></div>\n</main>\n```\n\n## API document\n\nAPI document is [here](https://ygoto3.github.io/spatial-navigation-cursor/class/spatial-navigation-cursor/index.js~CursorManager.html).\n",
    "longname": "/Users/a12915/workspace/spatial-navigation-cursor/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 41,
    "kind": "testFile",
    "name": "spatial-navigation-cursor/index.test.js",
    "content": "// @flow\n/*global global*/\nimport test from 'ava';\nimport { JSDOM } from 'jsdom';\nimport td from 'testdouble';\nimport CursorManager from './index.js';\n\nvar observe = td.func();\nvar disconnect = td.func();\n\ntest.before(() => {\n  global.window = new JSDOM('<body><div id=\"root\"><p class=\"focused\" style=\"position: absolute; top: 100px; left: 50px;\">focused</p></div></body>').window;\n  global.document = global.window.document;\n  global.MutationObserver = class {\n    observe() { observe() }\n    disconnect() { disconnect() }\n  }\n  global.getComputedStyle = () => ({ borderLeftWidth: '2px', borderTopWidth: '2px' });\n});\n\ntest.after(() => {\n  delete global.window;\n  delete global.document;\n  delete global.MutationObserver;\n  delete global.getComputedStyle;\n});\n\ntest('cursor', t => {\n  const root = document.getElementById('root');\n  if (!root) {\n    t.fail();\n    return;\n  }\n\n  const cursorManager = new CursorManager({\n    root,\n    focusClassName: 'focused'\n  });\n\n  const actual = cursorManager.getCursor();\n  t.is(actual.style.display, '');\n\n  cursorManager.start();\n  t.is(actual, root.querySelector('.__spatial-navigation-cursor__'));\n  t.is(actual.classList.item(0), '__spatial-navigation-cursor__');\n  t.is(actual.style.position, 'absolute');\n  t.is(parseInt(actual.style.top, 10), 0);\n  t.is(parseInt(actual.style.left, 10), 0);\n  t.is(td.explain(observe).callCount, 1);\n\n  cursorManager.stop();\n  t.is(root.querySelector('.__spatial-navigation-cursor__'), null);\n  t.is(td.explain(disconnect).callCount, 1);\n\n  const listener = td.func();\n  cursorManager.addEventListener(CursorManager.Events.FOCUS_UPDATED, listener);\n  (cursorManager/*: any*/).trigger_(CursorManager.Events.FOCUS_UPDATED);\n  t.is(td.explain(listener).callCount, 1);\n\n  cursorManager.removeEventListener(CursorManager.Events.FOCUS_UPDATED, listener);\n  (cursorManager/*: any*/).trigger_(CursorManager.Events.FOCUS_UPDATED);\n  t.is(td.explain(listener).callCount, 1);\n});\n",
    "static": true,
    "longname": "/Users/a12915/workspace/spatial-navigation-cursor/index.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 42,
    "kind": "test",
    "name": "test0",
    "testId": 0,
    "memberof": "spatial-navigation-cursor/index.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "spatial-navigation-cursor/index.test.js~test0",
    "access": null,
    "description": "cursor",
    "lineNumber": 28
  }
]